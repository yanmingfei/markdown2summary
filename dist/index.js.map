{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import marked  from 'marked-ast';\nconst parseMarkAst = function (ast) {\n    let str = ''\n    for (let i = 0; i < ast.length; i++) {\n        const curAst = ast[i]\n        if (curAst.type === 'heading' || curAst.type === 'paragraph' || curAst.type === 'strong' || curAst.type === 'em') {\n            if (curAst.text.length === 1) {\n                if (curAst.text !== '/n') {\n                    if( typeof curAst.text[0] === 'string'){\n                        str += curAst.text[0] ? curAst.text[0].trim() : ''\n                    }\n                }\n            } else {\n                for (let y = 0; y < curAst.text.length; y++) {\n                    const yAst = curAst.text[y]\n                    if (typeof yAst === 'object') {\n                        str += yAst.text[0] ? yAst.text[0].trim() :''\n                    } else {\n                        str += yAst ? yAst.trim() : ''\n                    }\n                }\n            }\n        }\n    }\n    return str\n}\n\nfunction markdown2Summary(markdownContent,subLen) {\n    if (markdownContent) {\n        markdownContent = markdownContent.split('\\n')\n        const textArr = []\n        for (let i = 0; i < markdownContent.length; i++) {\n            const text = markdownContent[i].trim()\n            if (text) {\n                textArr.push(text)\n            }\n        }\n        markdownContent = textArr.join('\\n')\n        const ast = marked.parse(markdownContent.trim())\n        const str = parseMarkAst(ast).slice(0, subLen)\n        return str\n    }\n    return ''\n}\n\n\nmodule.exports = markdown2Summary"],"names":["marked"],"mappings":";;;;;;;;;;IACA,MAAM,YAAY,GAAG,UAAU,GAAG,EAAE;IACpC,IAAI,IAAI,GAAG,GAAG,GAAE;IAChB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACzC,QAAQ,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,EAAC;IAC7B,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,IAAI,KAAK,WAAW,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE;IAC1H,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IAC1C,gBAAgB,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE;IAC1C,oBAAoB,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;IAC3D,wBAAwB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,GAAE;IAC1E,qBAAqB;IACrB,iBAAiB;IACjB,aAAa,MAAM;IACnB,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7D,oBAAoB,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAC;IAC/C,oBAAoB,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;IAClD,wBAAwB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,GAAE;IACrE,qBAAqB,MAAM;IAC3B,wBAAwB,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,GAAE;IACtD,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO,GAAG;IACd,EAAC;AACD;IACA,SAAS,gBAAgB,CAAC,eAAe,CAAC,MAAM,EAAE;IAClD,IAAI,IAAI,eAAe,EAAE;IACzB,QAAQ,eAAe,GAAG,eAAe,CAAC,KAAK,CAAC,IAAI,EAAC;IACrD,QAAQ,MAAM,OAAO,GAAG,GAAE;IAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACzD,YAAY,MAAM,IAAI,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,GAAE;IAClD,YAAY,IAAI,IAAI,EAAE;IACtB,gBAAgB,OAAO,CAAC,IAAI,CAAC,IAAI,EAAC;IAClC,aAAa;IACb,SAAS;IACT,QAAQ,eAAe,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAC;IAC5C,QAAQ,MAAM,GAAG,GAAGA,0BAAM,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,EAAE,EAAC;IACxD,QAAQ,MAAM,GAAG,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,EAAC;IACtD,QAAQ,OAAO,GAAG;IAClB,KAAK;IACL,IAAI,OAAO,EAAE;IACb,CAAC;AACD;AACA;IACA,MAAM,CAAC,OAAO,GAAG;;;;;;"}